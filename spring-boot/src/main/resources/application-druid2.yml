spring:
  datasource:
    master:
      type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:mysql://${linux.port.master.mysql}/wtf?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
      username: root
      password: 158262751
    cluster:
      - key: slave1
        url: jdbc:mysql://${linux.port.slave.slave1}/wtf?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
        username: root
        password: 158262751
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
      - key: slave2
        url: jdbc:mysql://${linux.port.slave.slave2}/wtf?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
        username: root
        password: 158262751
        driver-class-name: com.mysql.cj.jdbc.Driver
    # 不清楚要放在这个地方
    filters: stat,wall,log4j2
    #连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
    #如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
    #removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)
    druid:
      # 数据源其他配置,初始化大小，最小，最大
      max-active: 30                           #初始化连接池的连接数量 大小，最小，最大
      min-idle: 5
      initial-size: 10
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      #      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #      filters: stat,wall
      # 监控
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: true
        session-stat-max-count: 100000
        principal-session-name: admin
        principal-cookie-name: admin
        profile-enable: true
      #基础监控配置（主要是配置监控的身份验证信息，毕竟系统运行状态也是个小秘密）
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #禁止手动重置监控数据
        reset-enable: true #false
        login-username: admin
        login-password: 123456
        #StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
        #deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
        allow:
        deny: 128.242.127.1/24,128.242.128.1
      filter:
        wall:
          enabled: true
          db-type: mysql
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            none-base-statement-allow: false
            update-where-none-check: true
            metadata-allow: true
          log-violation: true
          throw-exception: true
      #Spring监控，对内部各接口调用的监控
      #      aop-patterns: com.graduation.design.mapper.*,com.graduation.design.controller.*,com.graduation.design.service.*
      aop-patterns: com.xwz.boot.controller.*,com.xwz.boot.mapper.*,com.xwz.boot.service.*
      #打开PSCache，并且指定每个连接上PSCache的大小是否缓存,preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true # 合并多个DruidDataSource的监控数据
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      # ！！！请勿配置timeBetweenLogStatsMillis 会定时输出日志 并导致统计的sql清零
      #      time-between-log-stats-millis: 20000
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis: 500'
